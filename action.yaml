name: Build and Push Image to quay.io
description: Builds and pushs an image to a quay.io image repository
inputs:
  repository:
    description: "The full name of the repository where the image will be pushed. Default is the GitHub repository name, ex: organization/repository."
    default: ${{ github.repository }}
  username:
    description: "Username for authentication to quay.io."
    required: true
  password:
    description: "Password for authentication to quay.io"
    required: true
  tag-versions:
    description: git tags to push, comma separated string such as `latest,v1.0.0`
    required: false
    default: latest,${{ github.event.release.tag_name }}
  build-secrets:
    description: docker build secrets. key=value pairs separated by newlines. See [docker build push action secrets configuration](https://github.com/docker/build-push-action/blob/master/docs/advanced/secrets.md) for details
    required: false
    default: ''
  docker-context:
    description: docker context. Passed to [docker build push action context input](https://github.com/docker/build-push-action#inputs). It should be relative to the root of the commit that triggered the action
    required: false
    default: './'
  docker-file:
    description: path to docker file relative to docker-context. Passed to [docker build push action file input](https://github.com/docker/build-push-action#inputs)
    required: false
    default: Dockerfile
  checkout:
    description: whether to automatically checkout the current repository
    required: false
    default: 'true'
runs:
  using: "composite"
  steps:
  - if: inputs.checkout == 'true'
    name: Checkout
    uses: actions/checkout@v3
  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v2
  - name: Login to Quay.io
    uses: docker/login-action@v2
    with:
      registry: quay.io
      username: ${{ inputs.username }}
      password: ${{ inputs.password }}
  - name: Get tags
    id: get-tags
    shell: bash
    env:
      QUAY_REPOSITORY: ${{ inputs.repository }}
      TAG_VERSIONS: ${{ inputs.tag-versions }}
    run: |
      fullTags=""
      for version in ${TAG_VERSIONS//,/ }; do
        # trim "v" from tag if it exists
        if [[ $version =~ ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ ]]; then
            trimmedVersion="${version:1}"
            echo "modified $version to $trimmedVersion"
            version=$trimmedVersion
        fi
        # build list of tags with quay registry, use ${blah,,} to ensure lower case
        fullTags="quay.io/${QUAY_REPOSITORY,,}:$version,$fullTags"
      done
      fullTags=${fullTags::-1}
      echo "will push with tags: $fullTags"
      echo "::set-output name=tags::$fullTags"
  - name: Build and push
    uses: docker/build-push-action@v6
    with:
      push: true
      tags: ${{ steps.get-tags.outputs.tags }}
      secrets: ${{ inputs.build-secrets }}
      context: ${{ inputs.docker-context }}
      file: ${{ inputs.docker-file }}
      cache-from: type=gha,mode=max
      cache-to: type=gha,mode=max
      no-cache: ${{ contains(github.event.head_commit.message, 'no-cache') }}
